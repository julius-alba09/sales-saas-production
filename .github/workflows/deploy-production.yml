name: Deploy to Production

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'

      - name: Install dependencies
        run: |
          cd frontend
          npm ci

      - name: Run tests (if available)
        run: |
          cd frontend
          if [ -f "package.json" ] && grep -q "\"test\":" package.json; then
            npm test -- --passWithNoTests
          fi

      - name: Build application
        run: |
          cd frontend
          npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_MOCK_MODE: "false"
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./frontend
          vercel-args: '--prod'

  database-migration:
    runs-on: ubuntu-latest
    environment: production
    needs: deploy
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Supabase CLI
        uses: supabase/setup-cli@v1
        with:
          version: latest

      - name: Run database migrations
        run: |
          supabase link --project-ref ${{ secrets.SUPABASE_PROJECT_REF }}
          supabase db push
        env:
          SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
          SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}

      - name: Generate TypeScript types
        run: |
          supabase gen types typescript --local > frontend/src/types/supabase.ts
          
          # Commit updated types if changed
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add frontend/src/types/supabase.ts || true
          git diff --staged --quiet || git commit -m "Update database types [skip ci]" || true
          git push || true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  health-check:
    runs-on: ubuntu-latest
    needs: [deploy, database-migration]
    
    steps:
      - name: Health check
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          
          # Check if the application is responding
          curl -f ${{ secrets.NEXT_PUBLIC_APP_URL }}/api/health || exit 1
          
          echo "âœ… Deployment successful and healthy!"